class Component{constructor(options){this.type="string";this.identifier="#root";this.el=document.querySelector(this.identifier);this.contents="";this.children=[];Object.keys(options).map(option_key=>{this[option_key]=options[option_key]})}assert_node(){this.el=document.body.querySelector(this.identifier);if(this.el===null){let el=document.createElement("div");if(this.identifier.indexOf("#")!==-1){el.id=this.identifier.split("#")[1]}else{el.classList.add(this.identifier.split(".")[1])}document.body.appendChild(el);this.el=document.body.querySelector(this.identifier)}}render(value=null){let return_value="";if(null!=value&&typeof value==="string")return_value+=value;return_value+=this.contents;return return_value}};class HTMLModifier{static render(component){const type=component.type.toLocaleLowerCase();component.assert_node();if(type==="string"||type==null)component.el.innerText=component.render();if(type!=null&&type.toLocaleLowerCase()==="html")component.el.innerHTML=component.render();component.children.map(child=>this.render(child))}};export{HTMLModifier,Component,StatefulComponent};class StatefulComponent extends Component{constructor(){super(...arguments);this.__state={};this.__previousState=[]}reset_state(){this.__state={};this.__previousState=[]}revert_state(){this.__state=this.__previousState[this.__previousState.length-2]}set state(state){this.__previousState.push(Object.assign({},this.__state));Object.keys(state).map(value=>{this.__state[value]=state[value]})}get state(){return Object.assign({},this.__state)}shouldComponentRender(state){return true}render(value=null){if(this.shouldComponentRender(this.state)){super.render(value)}}};
